{"version":3,"sources":["assets/tony.jpg","assets/ryan.jfif","assets/allan.jfif","assets/gen3-robot.webp","assets/food.png","assets/mountains_and_seas.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","style","height","width","marginTop","display","alignItems","justifyContent","src","food","photo_gen3","background","padding","marginBottom","lineHeight","profile_tony","alt","profile_ryan","profile_allan","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,uECA3CD,EAAOC,QAAU,IAA0B,gD,8LC8F5BC,MArFf,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,SAAb,uBAGA,uBAAGA,UAAU,YAAb,yCAIF,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAQC,UAAW,QAASC,QAAS,OAAQC,WAAY,MAAOC,eAAgB,iBACpH,yBAAKN,MAAO,CAACE,MAAM,QAASE,QAAS,OAAQC,WAAY,MAAOC,eAAgB,iBAC9E,yBAAKN,MAAO,CAACC,OAAQ,SAAUM,IAAKC,MACpC,yBAAKR,MAAO,CAACC,OAAQ,SAAUM,IAAKE,OAEtC,yBAAKT,MAAO,CAACE,MAAM,QAASQ,WAAY,QAASC,QAAS,OAAQC,aAAc,SAC9E,uBAAGb,UAAU,WAAb,eACA,uBAAGA,UAAU,WAAb,2BACA,6BACA,uBAAGA,UAAU,YAAYC,MAAO,CAACa,WAAY,MAA7C,iJACA,uBAAGd,UAAU,YAAYC,MAAO,CAACa,WAAY,MAA7C,qUAGJ,yBAAKb,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAQQ,WAAY,UACxD,uBAAGX,UAAU,SAAb,2CAGA,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,OAAQE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,iBACnG,yBAAKN,MAAO,CAACC,OAAQ,OAAQC,MAAO,MAAOE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAChG,yBAAKC,IAAKO,IAAcf,UAAU,cAAcgB,IAAI,aAEtD,yBAAKf,MAAO,CAACC,OAAQ,OAAQC,MAAO,MAAOE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAChG,yBAAKC,IAAKS,IAAcjB,UAAU,cAAcgB,IAAI,aAEtD,yBAAKf,MAAO,CAACC,OAAQ,OAAQC,MAAO,MAAOE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAChG,yBAAKC,IAAKU,IAAelB,UAAU,cAAcgB,IAAI,cAGzD,yBAAKf,MAAO,CAAEC,OAAQ,SAAUC,MAAO,OAAQE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,iBACpG,yBAAKN,MAAO,CAACE,MAAM,UACjB,uBAAGH,UAAU,WAAb,YACA,uBAAGA,UAAU,aAAb,4GAEF,yBAAKC,MAAO,CAACE,MAAM,UACjB,uBAAGH,UAAU,WAAb,aACA,uBAAGA,UAAU,aAAb,6GAEF,yBAAKC,MAAO,CAACE,MAAM,UACjB,uBAAGH,UAAU,WAAb,cACA,uBAAGA,UAAU,aAAb,8GAIN,yBAAKC,MAAO,CAAEE,MAAO,SACnB,uBAAGH,UAAU,aAAb,2BACA,uBAAGA,UAAU,aAAb,2BACA,uBAAGA,UAAU,aAAb,2BACA,uBAAGA,UAAU,aAAb,4BAkBF,yBAAKA,UAAU,0BC1EHmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c25cc1c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tony.7fbc3449.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ryan.ec78bca4.jfif\";","module.exports = __webpack_public_path__ + \"static/media/allan.7b18ebb2.jfif\";","module.exports = __webpack_public_path__ + \"static/media/gen3-robot.fe199288.webp\";","module.exports = __webpack_public_path__ + \"static/media/food.88e4ec52.png\";","module.exports = __webpack_public_path__ + \"static/media/mountains_and_seas.07162885.jpg\";","import React from 'react';\nimport profile_tony from './assets/tony.jpg';\nimport profile_ryan from './assets/ryan.jfif';\nimport profile_allan from './assets/allan.jfif';\nimport photo_gen3 from './assets/gen3-robot.webp';\nimport food from './assets/food.png';\nimport pic from './assets/mountains_and_seas.jpg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <div className=\"Fixed-header\">\n          <p className=\"Title\">\n            TRON Robotic Feeder\n          </p>\n          <p className=\"Subtitle\">\n            Ready to help you eat at any moment.\n          </p>\n        </div>\n        <div style={{ height: \"600px\", width: \"100%\", marginTop: \"200px\", display: \"flex\", alignItems: \"end\", justifyContent: \"space-around\" }}>\n          <div style={{width:\"700px\", display: \"flex\", alignItems: \"end\", justifyContent: \"space-around\"}}>\n            <img style={{height: \"100px\"}} src={food} />\n            <img style={{height: \"500px\"}} src={photo_gen3} />\n          </div>\n          <div style={{width:\"400px\", background: \"white\", padding: \"50px\", marginBottom: \"30px\"}}>\n            <p className=\"Heading\">Introducing</p>\n            <p className=\"Heading\">the TRON Robotic Feeder</p>\n            <br/>\n            <p className=\"Paragraph\" style={{lineHeight: 1.5}}> The robotic feeder is a system designed to help people with disabilities to have meals more easily without moving their arms or upper body. </p>\n            <p className=\"Paragraph\" style={{lineHeight: 1.5}}> This system primarily comprises a robotic arm with a built-in gripper and an RGBD camera. Knowing what food the user wants through linguistic inputs, the system will then search for the target food on the table using computer vision, use a fork to skewer it, locate and then deliver the food to the user’s mouth. </p>\n          </div>\n        </div>\n        <div style={{ height: \"600px\", width: \"100%\", background: \"white\"}}>\n          <p className=\"Title\">\n          —— Meet Our Team ——\n          </p>\n          <div style={{ height: \"300px\", width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\"}}>\n            <div style={{height: \"100%\", width: \"30%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n              <img src={profile_tony} className=\"App-profile\" alt=\"Profile\" />\n            </div>\n            <div style={{height: \"100%\", width: \"30%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n              <img src={profile_ryan} className=\"App-profile\" alt=\"Profile\" />\n            </div>\n            <div style={{height: \"100%\", width: \"30%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n              <img src={profile_allan} className=\"App-profile\" alt=\"Profile\" />\n            </div>\n          </div>\n          <div style={{ height: \"20vmin\", width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\"}}>\n            <div style={{width:\"350px\"}}>\n              <p className=\"Heading\">Tony Cui</p>\n              <p className=\"Paragraph\"> Tony in his past internships has been primarily exploring web development (SaaS) and robotic control. </p>\n            </div>\n            <div style={{width:\"350px\"}}>\n              <p className=\"Heading\">Ryan Zhou</p>\n              <p className=\"Paragraph\"> Ryan is a team player that has expertise in camera-based robotics development and basic CV operations. </p>\n            </div>\n            <div style={{width:\"350px\"}}>\n              <p className=\"Heading\">Allan Zhao</p>\n              <p className=\"Paragraph\"> Allan has extensive exposure to robotics manipulation, task and motion planning, and computer vision. </p>\n            </div>\n          </div>\n        </div>\n        <div style={{ width: \"75vw\" }}>\n          <p className=\"Paragraph\"> More description here </p>\n          <p className=\"Paragraph\"> More description here </p>\n          <p className=\"Paragraph\"> More description here </p>\n          <p className=\"Paragraph\"> More description here </p>\n        </div>\n        {/* <div className=\"List\" style={{ marginTop: \"20px\", marginBottom: \"45px\" }}>\n          <button className=\"App-button\"\n            onClick={() => window.open('https://yuanlong-tony-cui.github.io/')}>\n            Blog\n          </button>\n          <span></span>\n          <button className=\"App-button\"\n            onClick={() => window.open(\"https://www.linkedin.com/in/yuanlong-tony-cui/\")}>\n            LinkedIn\n          </button>\n          <span></span>\n          <button className=\"App-button\"\n            onClick={() => window.open(\"https://github.com/Yuanlong-Tony-Cui\")}>\n            GitHub\n          </button>\n        </div> */}\n        <div className=\"PortfolioContainer\">\n          {/* <img src={pic} alt=\"PictureMissing\" className=\"PortfolioItem\"/> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}